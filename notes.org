* Initial Setup
Install Emacs from Emacs GNU website.

When run the first time it will create the .emacs.d directory in 
C:\Users\USERID\AppData\Roaming.

It will not create the .emacs file that is supposed to be in the same directory. 
To create a .emacs file either change a setting or download a package. 
Either of these actions will generate a .emacs file. 
Personally, I like changing to a dark-mode theme so I can cool like all the other programmers.

To do this go to  Options > Customize Emacs > Custome Themes.
Then click a theme. I've been using 'Wheatgrass' lately.
Then click 'Save Theme Settings' and presto, a .emacs file is created.

Before editing the new .emacs file run the following:
#+begin_src lisp
package-list-packages
#+end_src

When prompted for MELPA license application hit 'a' for always. 
That will allow the license to apply to future sessions.

Now, configure the .emacs file to point towards a .el file where all user changes will be made. 
At the top of your .emacs place the following code under the (package-initialize) function:
#+begin_src lisp
(load-file "c:/path_to_emacs_dir/your_file_name.el")
#+end_src

Also check any file paths that may need to be changed: \\
Python Shell Interpretor \\
Abbreviations \\
YAS Snippets \\

Ideally, the next step would be to download the custom .el from [[Github][Github]] and place it in the location specified above.



* Installing Packages 

To install a package:
#+begin_src lisp
package-install
#+end_src

press return, then enter package name.

If the package you are trying to install is not found, try:
#+begin_src lisp
(package-refresh-contents)
#+end_src

This will download updated package lists from all of your added repos.

* Magit Notes
** Git setup <<Github>>
If on windows, install Git from [[gitforwindows.org]]
I mostly use the default settings other than the default text editor I set to NP++.
Emacs isn't an option.

Open the Git command window.

cd to destination of desired repo. 

Pull repo with clone command:
#+begin_src shell
git clone https://git.com/rjwilson18/REPO_NAME.git
#+end_src

** Create Repository
#+begin_src lisp
 (magit-init)
#+end_src

** Open Magit Repo
1. go to directory using C-x f
2. Open magit status
 a. Set to C-x g
#+begin_src lisp
 (magit-status)
#+end_src

** Once in Repo
s to stage
u to unstage
tab to expand/collapse

** Commit
1. c will commit staged files
2. 2 buffers pop up.
 1. shows changes being committed
 2. allows you to enter commit message
3. C-c C-c performs commit

** Push
#+begin_src lisp
 (magit-push)
#+end_src

p to push to remote
